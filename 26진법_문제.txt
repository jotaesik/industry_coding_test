Question]  26진법 산술연산 함수를 구현하시오. (4 Hour)

A B C ------ Z

0 1 2 ------ 25

하나의 26진수는 127자리를 넘지 않고, 숫자개수는 100개를 넘지 않는다.

주어진 question문자열을 계산하여 answer에 저장하라 

(결과가 음수일 경우 문자열의 처음에 '-'로 표기할것)

외부 함수는 사용할수 없다. (#include를 통한 외부 함수 사용 금지)

 

ex)question

CBA+GRDAGSDZFFDAFERFEFDAFAFGADFA-ERADFDAZDFWEQQ+FAFDCVARFERAFDFAFADFDAF

 

 

[이름.cpp]

// DO NOT ANY INCLUDE

#define STRING_SIZE 12800

void test_main(char answer[STRING_SIZE], const char question[STRING_SIZE]);

{

 

}

 

[main.cpp] #include <stdio.h>

#include <stdlib.h>

#include <string.h>

#include <time.h>

 

#define DEPTH_SIZE 127

#define PARAM_SIZE 100

#define STRING_SIZE 12800

 

void test_main(char answer[STRING_SIZE], const char question[STRING_SIZE]);

 

 

static bool check_data(char answer[STRING_SIZE], const char question[STRING_SIZE]){

	return true;

}

 

static char* make_rand_number_to_string(void){

	static char str[DEPTH_SIZE + 1];

	str[0] = (rand() % 25) + 'B';

	int depth = (rand() % DEPTH_SIZE) + 1;

	

	for(int i = 1; i < depth; i++){

		str[i] = (rand() % 26) + 'A'; 

	}

	str[depth] = 0;

	

	return str;

}

 

static void build_data(char question[STRING_SIZE]){

	strcpy_s(question, STRING_SIZE, make_rand_number_to_string());

	int count = (rand() % (PARAM_SIZE - 1)) + 2;

	

	for(int i = 1; i < count; i++){

		(rand() % 2 == 0) ? strcat_s(question, STRING_SIZE, "+") : strcat_s(question, STRING_SIZE, "-");

		strcat_s(question, STRING_SIZE, make_rand_number_to_string());

	}

}

 

int main(void){

	unsigned int SCORE = 0;

 

	for(int i = 0; i < 100; i++){

		char question[STRING_SIZE];

		build_data(question);

		char answer[STRING_SIZE];

		char answer2[STRING_SIZE];

		unsigned int t = clock();

		test_main(answer, question);

		SCORE += (clock()-t);

		

		if(check_data(answer, question) == false){

			SCORE += 1000000;

		}

	}

 

	printf("SCORE = %d\n", SCORE);

	return 0;

}